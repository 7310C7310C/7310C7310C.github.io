[{"title":"Python + Flask + uWSGI + Nginx 搭建淘宝商品搜索网站（五）","date":"2018-06-21T03:36:22.000Z","path":"2018/06/21/009-Python-+-Flask-+-uWSGI-+-Nginx-搭建淘宝商品搜索网站（五）/","text":"网址：www.wiken.app淘宝商品搜索网站搭建第五步：添加 https 支持（SSL 证书的申请） 阿里云 SSL 证书申请","tags":[{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Python + Flask + uWSGI + Nginx 搭建淘宝商品搜索网站（四）","date":"2018-06-20T03:36:22.000Z","path":"2018/06/20/008-Python-+-Flask-+-uWSGI-+-Nginx-搭建淘宝商品搜索网站（四）/","text":"网址：www.wiken.app淘宝商品搜索网站搭建第四步：域名 DNS 解析 DNSPod","tags":[{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Python + Flask + uWSGI + Nginx 搭建淘宝商品搜索网站（三）","date":"2018-06-19T03:36:22.000Z","path":"2018/06/19/007-Python-+-Flask-+-uWSGI-+-Nginx-搭建淘宝商品搜索网站（三）/","text":"网址：www.wiken.app淘宝商品搜索网站搭建第三步：在 CentOS 上以 uWSGI + Nginx 部署 uWSGI 安装与配置Nginx 安装与配置","tags":[{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Python + Flask + uWSGI + Nginx 搭建淘宝商品搜索网站（二）","date":"2018-06-18T03:36:22.000Z","path":"2018/06/18/006-Python-+-Flask-+-uWSGI-+-Nginx-搭建淘宝商品搜索网站（二）/","text":"网址：www.wiken.app淘宝商品搜索网站搭建第二步：Web 前端设计 使用 Materialize 框架使用 requests 模块获取源代码：1234def getCode(url, headers): r = requests.get(url, headers=headers) r.encoding = 'utf-8' return r.text 判断表单数据是关键词还是链接后再获取源代码：123456789keyword_orUrl = request.form.get(\"keyword_orUrl\")if keyword_orUrl.startswith('https://'): splited = keyword_orUrl.split('&amp;s=') url = splited[0] + '&amp;s=' + str(int(splited[1])+44) code = getCode(url, headers)else: keyword = keyword_orUrl url = 'https://s.taobao.com/search?q=' + keyword + '&amp;cd=false&amp;s=0' code = getCode(url, headers) 导航栏使用 re 模块，用正则表达式提取商品标题、图片、价格等信息：123456789101112131415161718pic_url = re.findall(r'\"pic_url\":\"([^\"]+)\"', code, re.I)detail_url = re.findall(r'\"detail_url\":\"([^\"]+)\"', code, re.I)for i in range(len(detail_url)): if detail_url[i].startswith(\"https:\"): detail_url[i] = detail_url[i][6:] detail_url[i] = detail_url[i].encode('utf-8').decode('unicode_escape')shopLink = re.findall(r'\"shopLink\":\"([^\"]+)\"', code, re.I)for i in range(len(shopLink)): if shopLink[i].startswith(\"https:\"): shopLink[i] = shopLink[i][6:] shopLink[i] = shopLink[i].encode('utf-8').decode('unicode_escape') title = re.findall(r'\"raw_title\":\"([^\"]+)\"', code, re.I)price = re.findall(r'\"view_price\":\"([^\"]+)\"', code, re.I) sales = re.findall(r'\"view_sales\":\"([^\"]+)\"', code, re.I)shop = re.findall(r'\"nick\":\"([^\"]+)\"', code, re.I)location = re.findall(r'\"item_loc\":\"([^\"]+)\"', code, re.I) 搜索框如果出现 404、405、500 等请求错误，则跳转到首页:1234567891011@app.errorhandler(404)def error_404(error): return render_template('index.html'), 404 @app.errorhandler(405)def error_405(error): return render_template('index.html'), 405 @app.errorhandler(500)def error_500(error): return render_template('index.html'), 500 商品卡片样式","tags":[{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Python + Flask + uWSGI + Nginx 搭建淘宝商品搜索网站（一）","date":"2018-06-17T03:36:22.000Z","path":"2018/06/17/005-Python-+-Flask-+-uWSGI-+-Nginx-搭建淘宝商品搜索网站（一）/","text":"网址：www.wiken.app淘宝商品搜索网站搭建第一步：程序逻辑的设计与编写 获取淘宝搜索结果网页源代码使用 requests 模块获取源代码：1234def getCode(url, headers): r = requests.get(url, headers=headers) r.encoding = 'utf-8' return r.text 判断表单数据是关键词还是链接后再获取源代码：123456789keyword_orUrl = request.form.get(\"keyword_orUrl\")if keyword_orUrl.startswith('https://'): splited = keyword_orUrl.split('&amp;s=') url = splited[0] + '&amp;s=' + str(int(splited[1])+44) code = getCode(url, headers)else: keyword = keyword_orUrl url = 'https://s.taobao.com/search?q=' + keyword + '&amp;cd=false&amp;s=0' code = getCode(url, headers) 提取商品信息使用 re 模块，用正则表达式提取商品标题、图片、价格等信息：123456789101112131415161718pic_url = re.findall(r'\"pic_url\":\"([^\"]+)\"', code, re.I)detail_url = re.findall(r'\"detail_url\":\"([^\"]+)\"', code, re.I)for i in range(len(detail_url)): if detail_url[i].startswith(\"https:\"): detail_url[i] = detail_url[i][6:] detail_url[i] = detail_url[i].encode('utf-8').decode('unicode_escape')shopLink = re.findall(r'\"shopLink\":\"([^\"]+)\"', code, re.I)for i in range(len(shopLink)): if shopLink[i].startswith(\"https:\"): shopLink[i] = shopLink[i][6:] shopLink[i] = shopLink[i].encode('utf-8').decode('unicode_escape') title = re.findall(r'\"raw_title\":\"([^\"]+)\"', code, re.I)price = re.findall(r'\"view_price\":\"([^\"]+)\"', code, re.I) sales = re.findall(r'\"view_sales\":\"([^\"]+)\"', code, re.I)shop = re.findall(r'\"nick\":\"([^\"]+)\"', code, re.I)location = re.findall(r'\"item_loc\":\"([^\"]+)\"', code, re.I) 异常处理如果出现 404、405、500 等请求错误，则跳转到首页:1234567891011@app.errorhandler(404)def error_404(error): return render_template('index.html'), 404 @app.errorhandler(405)def error_405(error): return render_template('index.html'), 405 @app.errorhandler(500)def error_500(error): return render_template('index.html'), 500","tags":[{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Codewars 之 A Rule of Divisibility by 13 解法","date":"2017-10-11T02:56:32.000Z","path":"2017/10/11/004-Codewars-之-A-Rule-of-Divisibility-by-13-解法/","text":"题目： When you divide the successive powers of 10 by 13 you get the following remainders of the integer divisions: 1, 10, 9, 12, 3, 4. Then the whole pattern repeats. Hence the following method: Multiply the right most digit of the number with the left most number in the sequence shown above, the second right most digit to the second left most digit of the number in the sequence. The cycle goes on and you sum all these products. Repeat this process until the sequence of sums is stationary. ………………………………………………………………… Example: What is the remainder when 1234567 is divided by 13? 7×1 + 6×10 + 5×9 + 4×12 + 3×3 + 2×4 + 1×1 = 178 We repeat the process with 178: 8x1 + 7x10 + 1x9 = 87 and again with 87: 7x1 + 8x10 = 87 ………………………………………………………………… From now on the sequence is stationary and the remainder of 1234567 by 13 is the same as the remainder of 87 by 13: 9 Call thirt the function which processes this sequence of operations on an integer n (&gt;=0). thirt will return the stationary number. thirt(1234567) calculates 178, then 87, then 87 and returns 87. thirt(321) calculates 48, 48 and returns 48 个人解答：123456789remainders = [1, 10, 9, 12, 3, 4]def thirt(n): sum = 0 for i, v in enumerate(reversed(str(n))): sum += int(v) * remainders[i % 6] if sum == n: return sum return thirt(sum) 网友（nhpatt, pompeu2004）最佳实践：1234567array = [1, 10, 9, 12, 3, 4]def thirt(n): total = sum([int(c) * array[i % 6] for i, c in enumerate(reversed(str(n)))]) if n == total: return total return thirt(total)","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Codewars 之 Multiples of 3 and 5 解法","date":"2017-04-13T10:48:25.000Z","path":"2017/04/13/003-Codewars-之-Multiples-of-3-and-5-解法/","text":"题目： If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in. Note: If the number is a multiple of both 3 and 5, only count it once. 个人解答：123456def solution(number): sum = 0 for i in range(number): if i%3==0 or i%5==0: sum = sum + i return sum 网友（Process 等）最佳实践：12def solution(number): return sum(x for x in range(number) if x % 3 == 0 or x % 5 == 0)","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Codewars 之 Unique In Order 解法","date":"2017-04-13T10:05:47.000Z","path":"2017/04/13/002-Codewars-之-Unique-In-Order-解法/","text":"题目： Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.For example:123unique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']unique_in_order('ABBCcAD') == ['A', 'B', 'C', 'c', 'A', 'D']unique_in_order([1,2,2,3,3]) == [1,2,3] 个人解答：12345678def unique_in_order(iterable): pre_item = None result = [] for item in iterable: if item != pre_item: result.append(item) pre_item = item return result 网友（kmeshu09 等）最佳实践：12345678def unique_in_order(iterable): result = [] prev = None for char in iterable[0:]: if char != prev: result.append(char) prev = char return result","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"Codewars 之 Shortest Word 解法","date":"2017-04-13T09:51:00.000Z","path":"2017/04/13/001-Codewars-之-Shortest-Word-解法/","text":"题目： x Simple, given a string of words, return the length of the shortest word(s).String will never be empty and you do not need to account for different data types. 个人解答：1234567def find_short(s): word_list = s.split() len_list = [] for word in word_list: len_list.append(len(word)) l = min(len_list) return l 网友（MiraliN 等）最佳实践：12def find_short(s): return min(len(x) for x in s.split())","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"你好!","date":"2017-04-02T02:26:12.000Z","path":"2017/04/02/hello-world/","text":"你好!","tags":[{"name":"随笔","slug":"随笔","permalink":"http://wiken.top/tags/随笔/"}]}]