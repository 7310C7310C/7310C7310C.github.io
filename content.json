[{"title":"01-数据结构与算法笔记：绪论","date":"2017-04-21T05:22:56.000Z","path":"2017/04/21/01-数据结构与算法笔记：绪论/","text":"1.1 计算机问题求解&emsp;&emsp;使用计算机是为了解决实际问题。一般而言，人们需要的不是解决一个具体问题的程序，而是解决一类问题的程序。&emsp;&emsp;计算机解决问题分为两个阶段：开发者针对实际问题开发出相应程序，使用者运行程序让计算机按程序完成计算。对于复杂的程序，完成很好通常还需修改完善，消除错误，升级功能。 1.1.1 程序开发过程&emsp;&emsp;真正的问题来自实际，是不清晰和不明确的，而程序是对计算机操作过程的精确描述，两者之间有非常大的距离。&emsp;&emsp;程序开发工作包含以下阶段：分析阶段、设计阶段、编码阶段、检查测试阶段、测试/调试阶段 1.1.2 一个简单的例子&emsp;&emsp;","tags":[]},{"title":"003. Codewars 之 Multiples of 3 and 5 解法","date":"2017-04-13T10:48:25.000Z","path":"2017/04/13/003-Codewars-之-Multiples-of-3-and-5-解法/","text":"题目： If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in. Note: If the number is a multiple of both 3 and 5, only count it once. 个人解答：123456def solution(number): sum = 0 for i in range(number): if i%3==0 or i%5==0: sum = sum + i return sum","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"002. Codewars 之 Unique In Order 解法","date":"2017-04-13T10:05:47.000Z","path":"2017/04/13/002-Codewars-之-Unique-In-Order-解法/","text":"题目： Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.For example:123unique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']unique_in_order('ABBCcAD') == ['A', 'B', 'C', 'c', 'A', 'D']unique_in_order([1,2,2,3,3]) == [1,2,3] 个人解答：12345678def unique_in_order(iterable): pre_item = None result = [] for item in iterable: if item != pre_item: result.append(item) pre_item = item return result","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"001. Codewars 之 Shortest Word 解法","date":"2017-04-13T09:51:00.000Z","path":"2017/04/13/001-Codewars-之-Shortest-Word-解法/","text":"题目： x Simple, given a string of words, return the length of the shortest word(s).String will never be empty and you do not need to account for different data types. 个人解答：1234567def find_short(s): word_list = s.split() len_list = [] for word in word_list: len_list.append(len(word)) l = min(len_list) return l","tags":[{"name":"Codewars","slug":"Codewars","permalink":"http://wiken.top/tags/Codewars/"},{"name":"Python","slug":"Python","permalink":"http://wiken.top/tags/Python/"}]},{"title":"你好","date":"2017-04-12T10:11:57.021Z","path":"2017/04/12/hello-world/","text":"请多指教！","tags":[{"name":"随笔","slug":"随笔","permalink":"http://wiken.top/tags/随笔/"}]}]